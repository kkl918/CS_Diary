#include <stdio.h>
#include <stdlib.h>

void line();
void print(void *v[], int);
void swap (void *v[], int, int);
void qsort(void *v[], int left, int right, int (*comp)(void *,void*));
void writeline(char *s[], int nline);

int numcpy(char *s1, char *s2);
int getline(char s[], int max);
int readline(char *s[], int max);

char *alloc(int n);

#define ALLOCSIZE 10000
#define MAX 10000 
static char allocbuf[ALLOCSIZE];
static char *allocp = allocbuf;

char *buf[MAX];

int main(){
	int i, left=0, nline;

	if((nline = readline(buf, MAX)) >= 0){
		qsort((void**)buf, 0, nline-1,(int(*)(void*,void*))(numcpy));
		writeline(buf,  nline);
		return 0;	
	}

}


void qsort(void *v[], int left, int right, int (*comp)(void *,void*)){
	int i, last;
	
	void swap(void*[], int, int);
	
	if(left >= right)
		return ;
	swap(v, left, (left+right)/2);
	
	last = left;
	for(i =left+1; i<=right; i++)
		if( (*comp)(v[i],v[left]) < 0 ){
			swap(v, ++last, i);	
		}
	swap(v,left,last);
	qsort(v, left,   last-1, comp);
	qsort(v, last+1, right , comp);	
}

void swap(void *v[], int i, int j){
	void *temp;
	temp = v[i];
	v[i] = v[j];
	v[j] = temp;
}

void print(void *v[], int argc){
		
	while(argc-- > 0){
		printf("%s ", *v++);
	}
			
	printf("\n");
}

void line(){
	printf("------------------------------\n");
}

int numcpy(char *s1, char *s2){
	double v1, v2;
	v1 = atof(s1);
	v2 = atof(s2);
	if(v1<v2)
		return -1;
	else if (v1>v2)
		return 1;
	else
		return 0;
}

int strcpy(char *s, char *t){
	for( ;*s == *t; s++, t++)
		if(*s == '\0')
			return 0;
	return *s - *t;
}

int getline(char s[], int max){
	int i, c;
	
	char *p;
	
	for(i=0; i<max-1 && (c = getchar()) != EOF && c != '\n'; i++)
		s[i] = c;
	
	if(c == '\n'){
		s[i] == c;
		++i;
	}
	
	s[i] = '\0';
	
	return i;
}

int readline(char *s[], int max){
	int len , nline=0;
	char *p, line[max];
	while(len = getline(line, max)){
		if(nline >= max || (p = alloc(len)) == NULL)
			return -1;
		else
			line[len-1] == '\0';
			strcpy(p, line);
			s[nline++] = p; // 把標頭放到指針數組裡 
			
	return nline;
	}
}

void writeline(char *s[], int nline){
	while(nline-- > 0)
		printf("%s\n", *s++);
}


char *alloc(int n){
	if(allocbuf + ALLOCSIZE - allocp >= n){
		allocp += n;
		return allocp - n;
	} else
		return 0;
}


