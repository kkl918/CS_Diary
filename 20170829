#include<stdio.h>

int main(int argc, char *argv[]){
	printf("(1) *++argv : %s\n",*++argv);
	printf("(2) *++argv : %s\n",*++argv);
	printf("(3) *argv : %s\n",*argv);
} 
--------------------------------------------------------------------
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define MAXLINE 1000

int getline(char *s, int lim)
{
int i = 0;

while(i < lim - 1 && (*s = getchar()) != EOF && *s++ != '\n')
   i++;

if(*s == '\n')
	*s++ = '\n';
*s = '\0';
return i;
}


int main(int argc, char *argv[])
{

 char line[MAXLINE];
 long lineno = 0;
 int c, except = 0, number = 0, found = 0, count = 0;

 while(--argc > 0 && (*++argv)[0] == '-'){
    printf("count:%d, argc:%d, *argv:%s\n", ++count, argc, *argv);
	while(c = *++argv[0])
      switch(c) {
         case 'x':
              except = 1;
              break;
         case 'n':
              number = 1;
              break;
         default:
              printf("find: illegal option %c\n", c);
              argc = 0;
              found = -1;
              break;
      }
 	
 }

 printf("on the way to second while.\ncount:%d, argc:%d, *argv:%s\n", ++count, argc, *argv);
 
 if(argc != 1)
     printf("Usage: find -x -n pattern\n");
 else
     while(getline(line, MAXLINE) > 0) {
     	 printf("second while.\ncount:%d, argc:%d, *argv:%s\n", ++count, argc, *argv);
         lineno++;
         if((strstr(line, *argv) != NULL) != except) {
               if(number)
                  printf("%ld:", lineno);
               printf("%s", line);
               found++;
         }
     }

 printf("Found: %d", found);
 return found;
}
