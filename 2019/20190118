function kalman(duration, dt)

% function kalman(duration, dt)
% 
% Kalman filter simulation fr a vehicle travelling along a road.
% 
% INPUTS
%
%   duration = length of simulation(seconds)
%   dt       = step size(seconds)

meanoise = 10;  % position measurement noise (feet)
accnoise = 0.2; % acceleration noise(feet/sec^2)

a    = [1 dt; 0 1];  % transition matrix
b    = [dt^2/2; dt]; % input matrix
c    = [1 0];        % measure matirx
x    = [0; 0];       % initial state vector
xhat = x;            % initial state estimate

Sz   = meanoise^2;                                % measurement error covariance
Sw   = accnoise^2 * [dt^4/4 dt^3/2; dt^3/2 dt^2]; % process noise cov
P    = Sw;                                        % initial estimation covariance

pos    = []; % true posiotion array
poshat = []; % estimated posiotion array
posmea = []; % measured posiotion array
vel    = []; % true velocity array
velhat = []; % estimated velocity array

for t = 0:dt:duration:
    % use a constant commanded acceleration of 1 foot/sec^2
    u = 1;
    
    % simulate linear system
    ProcessNoise = accnoise * [(dt^2/2)*radn; dt*radn];
    x = a * x + b * u + ProcessNoise;
    
    % simulate noisy measurement
    MeaNoise = meanoise * randn;
    y = c * x + MeaNoise;
    
    % Extrapolate the most recent state estimate to the present time.
    xhat = a * xhat + b * u;
    
    % From the innovation vector
    Inn = y - x * xhat;
    
